{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/measurements-card/measurements-card.component.ts","./src/app/measurements-card/measurements-card.component.html","./src/app/network.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'oximetro';\n}\n","<div class=\"toolbar\">\n  <img src=\"../assets/oximetro_128x128.png\" alt=\"Ícone de oxímetro\">\n  <span class=\"titulo\">Sistema Oxímetro IoT</span>\n</div>\n\n<div class=\"measurements-cards-grid\">\n  <app-measurements-card\n    measurement=\"sp02\">\n  </app-measurements-card>\n  <app-measurements-card\n    measurement=\"hearthate\">\n  </app-measurements-card>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { GoogleChartsModule } from 'angular-google-charts';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MeasurementsCardComponent } from './measurements-card/measurements-card.component';\n\nimport { NetworkService } from './network.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MeasurementsCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    GoogleChartsModule\n  ],\n  providers: [\n    NetworkService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { NetworkService } from './../network.service';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n\n@Component({\n  selector: 'app-measurements-card',\n  templateUrl: './measurements-card.component.html',\n  styleUrls: ['./measurements-card.component.css']\n})\nexport class MeasurementsCardComponent implements OnInit {\n  public titulo: string;\n  public pathDaImagem: string;\n  public descricao: string;\n  public ultimaLeitura = 0;\n  public initialChartData: Array<Array<any>> = [\n    [ 0, 0 ]\n  ];\n  public chartConfig = {\n    title: 'Area Chart',\n    type: 'AreaChart',\n    columnNames: ['Data', '<Medida>'],\n    data: this.initialChartData,\n    options: {\n      chartArea: {\n        width: '80%',\n        height: '80%'\n      },\n      backgroundColor: '#efefef',\n      colors: ['#82b1ff'],\n      pointSize: 6,\n      fontName: 'Roboto',\n      fontSize: 14,\n      hAxis: {\n        textPosition: 'none',\n        textStyle: {\n          color: 'black',\n        },\n        baselineColor: 'black'\n      },\n      vAxis: {\n        minValue: 0,\n        maxValue: 100,\n        textStyle: {\n          color: 'black',\n        },\n        baselineColor: 'black'\n      },\n      animation: {\n        startup: true,\n        duration: 1000\n      },\n      legend: {\n        position: 'none',\n        textStyle: {\n          color: 'black',\n        }\n      },\n      tooltip: {\n        ignoreBounds: false,\n        isHtml: false\n      }\n    }\n  };\n\n  @Input() measurement: string;\n\n  private response: Observable<object>;\n\n  constructor(\n    private networkService: NetworkService) {\n      setInterval(() => this.fetchData(), 1000 * 60 * environment.update_interval);\n     }\n\n  ngOnInit(): void {\n      const options = environment.graph_options[this.measurement];\n      this.titulo = options.title;\n      this.pathDaImagem = options.header_img;\n      this.descricao = options.description;\n      this.chartConfig.columnNames = ['Data', this.titulo];\n      this.fetchData();\n  }\n\n  fetchData() {\n    // Busca dados de medição no banco de dados.\n    const route = 'busca_dados_para_grafico/' + this.measurement;\n    this.response = this.networkService.buscarDadosNoServidor(route);\n    this.response.subscribe((data: {graph_data: []}) => {\n      this.updateGraphData(data);\n    });\n  }\n\n  updateGraphData(data: {graph_data: []}) {\n    if ( data.graph_data.length === 0 ) {\n      this.chartConfig.data = this.initialChartData;\n    } else {\n      this.chartConfig.data = data.graph_data;\n    }\n  }\n\n}\n","<div class=\"card\">\n  <div class=\"header\">\n    <span class=\"header-image\">\n      <img class=\"header-image\" [src]=\"pathDaImagem\" [alt]=\"descricao\">\n    </span>\n    <span class=\"titulo\">{{titulo}}</span>\n  </div>\n  <!-- Gráfico de série temporal das medições -->\n  <div class=\"content\">\n    <google-chart\n      [type]=\"chartConfig.type\"\n      [data]=\"chartConfig.data\"\n      [columns]=\"chartConfig.columnNames\"\n      [options]=\"chartConfig.options\"\n      dynamicResize=\"true\"\n      width=\"100%\">\n    </google-chart>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NetworkService {\n\n  constructor(private http: HttpClient) {}\n\n  buscarDadosNoServidor(route: string) {\n    const url = environment.server_url + route;\n    return this.http.get(url);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  server_url: 'http://0.0.0.0:8080/',\n  update_interval: 5, // Tempo de atualização em minutos\n\n  graph_options: {\n    sp02: {\n      title: 'Saturação de Oxigênio',\n      header_img: '../../assets/sp02.png',\n      description: 'Icone de Saturação de Oxigênio'\n    },\n    hearthate: {\n      title: 'Frequência Cardíaca',\n      header_img: '../../assets/hearthate.png',\n      description: 'Icone de Frequência Cardíaca'\n    }\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}